{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","useState","find","tab","id","selectedTab","setSelectedTab","className","map","cn","href","onClick","handleTabClick","title","content","App","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,EAAsCC,mBACpCH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBD,EAAK,IADvD,mBAAOO,EAAP,KAAoBC,EAApB,KAWA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAACL,GAAD,OACR,oBAEEI,UAAWE,IAAG,CAAE,YAAaN,EAAIC,KAAOC,EAAYD,KAFtD,SAIE,mBACEM,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,kBAnBA,SAACR,GAClBA,EAAIC,KAAOC,EAAYD,KACzBE,EAAeH,GACfH,EAAcG,IAgBWS,CAAeT,IAHhC,SAKGA,EAAIU,SARFV,EAAIC,WAejB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAYS,cCzCRhB,EAAO,CAClB,CAAEM,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0Cd,mBAASH,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBiB,EAAtB,KAMA,OACE,sBAAKT,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,KACA,UAAAT,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,YAA9B,eAA8Cc,QAAS,MAG1D,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeA,EACfC,cAfoB,SAACG,GACzBa,EAAiBb,EAAIC,WCdzBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.467fee68.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const [selectedTab, setSelectedTab] = useState(\n    tabs.find((tab) => tab.id === selectedTabId) || tabs[0],\n  );\n\n  const handleTabClick = (tab: Tab) => {\n    if (tab.id !== selectedTab.id) {\n      setSelectedTab(tab);\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={cn({ 'is-active': tab.id === selectedTab.id })}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {tabs.find((tab) => tab.id === selectedTabId)?.title || ''}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}